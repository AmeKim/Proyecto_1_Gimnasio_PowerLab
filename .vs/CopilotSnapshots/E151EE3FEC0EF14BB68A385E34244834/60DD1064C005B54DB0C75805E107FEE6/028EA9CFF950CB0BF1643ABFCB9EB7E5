#include "vecEspecialidades.h"
#include <iostream>

vecEspecialidades::vecEspecialidades() {
    can = 0;
    vEspecialidades = new especialidad*[tam];
    for (int i = 0; i < tam; i++) {
        vEspecialidades[i] = nullptr;
    }
}

vecEspecialidades::~vecEspecialidades() {
    for (int i = 0; i < can; i++) {
        delete vEspecialidades[i];
    }
    delete[] vEspecialidades;
}

void vecEspecialidades::agregarEspecialidad(especialidad* esp) {
    if (can < tam && esp) {
        vEspecialidades[can++] = esp;
    }
}

especialidad* vecEspecialidades::buscarPorId(int id) {
    for (int i = 0; i < can; i++) {
        if (vEspecialidades[i] && vEspecialidades[i]->getId() == id) {
            return vEspecialidades[i];
        }
    }
    return nullptr;
}

especialidad* vecEspecialidades::buscarPorNombre(const string& nombre) {
    for (int i = 0; i < can; i++) {
        if (vEspecialidades[i] && vEspecialidades[i]->getNombre() == nombre) {
            return vEspecialidades[i];
        }
    }
    return nullptr;
}

int vecEspecialidades::getCan() const {
    return can;
}

string vecEspecialidades::toString() const {
    stringstream s;
    for (int i = 0; i < can; i++) {
        if (vEspecialidades[i]) {
            s << vEspecialidades[i]->toString() << endl;
        }
    }
    return s.str();
}

void vecEspecialidades::mostrarTodas() const {
    for (int i = 0; i < can; i++) {
        if (vEspecialidades[i]) {
            vEspecialidades[i]->mostrar();
            cout << "-------------------" << endl;
        }
    }
}
