  reporteM.cpp
C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,32): error C2663: 'vecClientes::obtener': ninguna función sobrecargada tiene una conversión válida para el puntero 'this'
      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecClientes.h(21,14):
      puede ser 'cliente *vecClientes::obtener(std::string) const'
          C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,32):
          'cliente *vecClientes::obtener(std::string) const': el argumento 1 no puede convertirse de 'int' a 'std::string'
              C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,40):
              'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string':ninguna función sobrecargada pudo convertir todos los tipos de argumento
                  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring(768,5):
                  puede ser 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const _Elem *const )'
          with
          [
              _Elem=char
          ]
                      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,40):
                      'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const _Elem *const )': el argumento 1 no puede convertirse de 'int' a 'const _Elem *const '
          with
          [
              _Elem=char
          ]
                          C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,40):
                          La conversión de un tipo entero a un tipo de puntero requiere reinterpret_cast, conversión de estilo de C o conversión de estilo de función entre paréntesis
                  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring(1340,5):
                  o       'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
                      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,40):
                      'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)': el argumento 1 no puede convertirse de 'int' a 'std::initializer_list<_Elem>'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
          and
          [
              _Elem=char
          ]
                          C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,40):
                          La conversión requiere un segundo operador de conversión definido por el usuario o constructor
                  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring(798,5):
                  o       'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(_Iter,_Iter,const _Alloc &)'
          with
          [
              _Alloc=std::allocator<char>
          ]
                  C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,40):
                  al hacer coincidir la lista de argumentos '(int)'
      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecClientes.h(17,14):
      o       'cliente *vecClientes::obtener(int)'
          C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,32):
          'cliente *vecClientes::obtener(int)': no se puede convertir el puntero 'this' de 'int' a 'vecClientes &'
              C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,22):
              Se pierden calificadores en la conversión
      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\reporteM.cpp(21,32):
      al hacer coincidir la lista de argumentos '(int)'
  
  Rutina.cpp
  submenuClaseGrup.cpp
  submenuClientes.cpp
C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\submenuClientes.cpp(44,7): warning C4101: 'opcion': variable local sin referencia
  submenuInstructores.cpp
C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\submenuInstructores.cpp(56,7): warning C4101: 'opcion': variable local sin referencia
  submenuSucursales.cpp
C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\submenuSucursales.cpp(41,7): warning C4101: 'opcion': variable local sin referencia
  vecClasesGrupales.cpp
  vecSucursales.cpp
C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,43): error C2664: 'Instructor *vecInstructores::obtener(std::string) const': el argumento 1 no puede convertirse de 'int' a 'std::string'
      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,51):
      'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string':ninguna función sobrecargada pudo convertir todos los tipos de argumento
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring(768,5):
          puede ser 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const _Elem *const )'
          with
          [
              _Elem=char
          ]
              C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,51):
              'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const _Elem *const )': el argumento 1 no puede convertirse de 'int' a 'const _Elem *const '
          with
          [
              _Elem=char
          ]
                  C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,51):
                  La conversión de un tipo entero a un tipo de puntero requiere reinterpret_cast, conversión de estilo de C o conversión de estilo de función entre paréntesis
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring(1340,5):
          o       'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
              C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,51):
              'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)': el argumento 1 no puede convertirse de 'int' a 'std::initializer_list<_Elem>'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
          and
          [
              _Elem=char
          ]
                  C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,51):
                  La conversión requiere un segundo operador de conversión definido por el usuario o constructor
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring(798,5):
          o       'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(_Iter,_Iter,const _Alloc &)'
          with
          [
              _Alloc=std::allocator<char>
          ]
          C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,51):
          al hacer coincidir la lista de argumentos '(int)'
      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecInstructores.h(20,17):
      vea la declaración de 'vecInstructores::obtener'
      C:\Users\ailem\OneDrive\Documentos\GitHub\Proyecto_1_Gimnasio_PowerLab\Project1\vecSucursales.cpp(87,43):
      al hacer coincidir la lista de argumentos '(int)'
  
  Generando código...
